#
# Author: github.com/luncliff (luncliff@gmail.com)
#
# References
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates
#   https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/
#   https://github.com/actions/virtual-environments/tree/main/images
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted
#

jobs:
  - job: vs2017_vs_msvc141
    pool:
      vmImage: "vs2017-win2016"
    variables:
      platform: x64
      configuration: Debug
    steps:
      - powershell: systeminfo
      - task: CMake@1
        inputs:
          cmakeArgs: . -DCMAKE_SYSTEM_VERSION="10.0.17134.0" -A $(platform)
          workingDirectory: "."
      - task: MSBuild@1
        inputs:
          solution: "**/*.sln"
          msbuildArchitecture: $(platform)
          platform: $(platform)
          configuration: $(configuration)
          msbuildArguments: "/p:platformtoolset=v141"

  - job: vs2019_vs_msvc142
    pool:
      vmImage: "windows-2019"
    variables:
      platform: x64
      configuration: Debug
    steps:
      - powershell: systeminfo
      - task: CMake@1
        inputs:
          cmakeArgs: . -DCMAKE_SYSTEM_VERSION="10.0.19041.0" -A $(platform)
          workingDirectory: "."
      - task: MSBuild@1
        inputs:
          solution: "**/*.sln"
          msbuildArchitecture: $(platform)
          platform: $(platform)
          configuration: $(configuration)
          msbuildArguments: "/p:platformtoolset=v142"

  - job: vs2019_ninja_clangcl
    pool:
      vmImage: windows-2019
    steps:
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "ninja"
          installInstallArgs: "--no-progress --yes"

      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "llvm"
          installInstallArgs: "--no-progress --yes"

  - job: macos_appleclang
    pool:
      vmImage: "macos-latest"
    variables:
      configuration: Debug
    steps:
      - script: uname -a
      - task: CMake@1
        inputs:
          cmakeArgs: .. -DCMAKE_BUILD_TYPE=$(configuration) -DCMAKE_INSTALL_PREFIX="$(Build.ArtifactStagingDirectory)"
          workingDirectory: build-osx
      - task: CMake@1
        inputs:
          cmakeArgs: --build . --target install --config $(configuration)
          workingDirectory: build-osx
      - powershell: ctest --output-on-failure

  # - job: mkdocs # todo: doxybook2
  #   pool:
  #     vmImage: "macos-latest"
  #   steps:
  #     - task: UsePythonVersion@0
  #       displayName: "Setup: Python 3.10"
  #       inputs:
  #         versionSpec: "3.10"
  #         addToPath: true
  #         architecture: "x64"
  #     - powershell: brew install doxygen
  #     - powershell: python3 -m pip install --user -r requirements.txt
  #     - powershell: doxygen ./docs/Doxyfile
  #     # - powershell: python3 -m doxybook -i docs/xml -o docs -t mkdocs
  #     # - powershell: python3 -m mkdocs build
  #     # - script: python3 -m mkdocs gh-deploy
  #     - task: ArchiveFiles@2
  #       inputs:
  #         rootFolderOrFile: "$(Build.BinariesDirectory)/docs"
  #         includeRootFolder: false
  #         archiveType: "zip"
  #         archiveFile: "$(Build.ArtifactStagingDirectory)/site.zip"
  #         replaceExistingArchive: true
  #     - task: PublishBuildArtifacts@1
  #       inputs:
  #         PathtoPublish: "$(Build.ArtifactStagingDirectory)"
  #         # ArtifactName: "artifacts"
  #         publishLocation: "Container"
  #   dependsOn:
  #     - vs2017_vs_msvc141
  #     - vs2019_vs_msvc142
  #     - macos_appleclang
  #   continueOnError: true
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
