#
# Author: github.com/luncliff (luncliff@gmail.com)
#
# References
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates
#   https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/
#   https://github.com/actions/virtual-environments/tree/main/images
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted
#

jobs:
  - job: vs2019_msvc142
    pool:
      vmImage: "windows-2019"
    variables:
      configuration: Debug
    steps:
      - task: CMake@1
        displayName: "CMake: Configure"
        inputs:
          cmakeArgs: --preset x64-windows-debug -DCMAKE_SYSTEM_VERSION="10.0.19041.0" -DCMAKE_INSTALL_PREFIX:PATH="$(Build.ArtifactStagingDirectory)" -DINSTALL_FOR_DEPLOY=true
          workingDirectory: "."
      - task: MSBuild@1
        inputs:
          solution: "build-x64-windows/ssf.sln"
          msbuildArchitecture: x64
          platform: x64
          configuration: $(configuration)
          msbuildArguments: "/p:platformtoolset=v142"
      - task: CMake@1
        displayName: "CMake: Install"
        inputs:
          cmakeArgs: --build --preset x64-windows-debug --target install
          workingDirectory: "."
      - powershell: ctest --preset x64-windows-debug --output-on-failure
        displayName: "CTest"

  - job: macos15_appleclang
    pool:
      vmImage: "macos-10.15"
    variables:
      configuration: Debug
    steps:
      - powershell: brew install ninja
      - task: CMake@1
        displayName: "CMake: Configure"
        inputs:
          cmakeArgs: --preset x64-osx-debug -DCMAKE_INSTALL_PREFIX:PATH="$(Build.ArtifactStagingDirectory)"
          workingDirectory: "."
      - task: CMake@1
        displayName: "CMake: Build/Install"
        inputs:
          cmakeArgs: --build --preset x64-osx-debug --target install
          workingDirectory: "."
      - powershell: ctest --preset x64-osx-debug --output-on-failure
        displayName: "CTest"

  - job: mkdocs
    pool:
      vmImage: "macos-10.15"
    steps:
      - powershell: |
          brew install doxygen
          python3 -m pip install --user -r requirements.txt
        displayName: "Setup: Homebrew, Python3 packages"
      - powershell: |
          wget -q https://github.com/matusnovak/doxybook2/releases/download/v1.4.0/doxybook2-osx-amd64-v1.4.0.zip
          unzip ./doxybook2-osx-amd64-v1.4.0.zip -d externals
        displayName: "Setup: Doxybook2 1.4.0"
      - powershell: |
          doxygen ./docs/Doxyfile
          ./externals/bin/doxybook2 --input ./docs/xml --output ./docs
        displayName: "Run Doxygen and Doxybook2"
      - powershell: python3 -m mkdocs build # todo: gh-deploy
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(Build.SourcesDirectory)/docs"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/docs.zip"
          replaceExistingArchive: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "artifacts"
    dependsOn:
      - vs2019_msvc142
      - macos15_appleclang
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
