#
# Author: github.com/luncliff (luncliff@gmail.com)
#
# References
#   https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#passing-parameters
#

jobs:
  - job: VS${{ parameters.visualstudio }}Clang8
    pool:
      vmImage: "windows-2019"
    steps:
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "ninja"
          installInstallArgs: "--no-progress --yes"
      - task: PowerShell@2
        inputs:
          # https://chocolatey.org/packages/llvm/8.0.1
          targetType: "inline"
          script: choco install llvm --yes --force --version=8.0.1
      - task: BatchScript@1
        inputs:
          filename: "./scripts/build-vs2019-cmake-clang.bat"
        env:
          SHARED: False
          BUILD_TYPE: Debug
        

  - job: VS${{ parameters.visualstudio }}ClangLatest
    pool:
      vmImage: "windows-2019"
    steps:
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "ninja"
          installInstallArgs: "--no-progress --yes"
      - task: ChocolateyCommand@0
        inputs:
          command: "install"
          installPackageId: "llvm"
          installInstallArgs: "--no-progress --yes"
      - task: BatchScript@1
        inputs:
          filename: "./scripts/build-vs2019-cmake-clang.bat"
        env:
          SHARED: False
          BUILD_TYPE: Debug

  - job: VS${{ parameters.visualstudio }}MSVC
    pool:
      #
      # See Also
      #   https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/win/Vs2019-Server2019-Readme.md
      #
      vmImage: "windows-2019"
    variables:
      configuration: debug
      platform: x64
    steps:
      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: systeminfo;
      - task: CMake@1
        inputs:
          cmakeArgs: . -A x64 -DBUILD_SHARED_LIBS=true
          workingDirectory: "."
      - task: MSBuild@1
        inputs:
          solution: ${{ parameters.solution }}
          msbuildArchitecture: $(platform)
          platform: $(platform)
          configuration: $(configuration)
          msbuildArguments: "/p:platformtoolset=v142"
        
      # - task: VSTest@2
      #   inputs:
      #     testAssemblyVer2: |
      #       **\*vstest*.dll
      #     codeCoverageEnabled: true
      #   continueOnError: true
