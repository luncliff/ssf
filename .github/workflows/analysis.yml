name: "Analysis"

# on: [ push, pull_request, workflow_dispatch ]
on:
  push:
    branches-ignore:
      - 'docs'

env:
  VCPKG_FEATURE_FLAGS: "registries,binarycaching,manifests"

jobs:
  windows:
    # https://github.com/actions/runner-images/blob/main/images/win/Windows2022-Readme.md
    runs-on: windows-2022
    strategy:
      matrix:
        triplet: [ x64-windows ]
    env:
      VCPKG_ROOT: "C:\\vcpkg"
    steps:
    - uses: actions/checkout@v3
    - name: "setup-sonar"
      uses: SonarSource/sonarcloud-github-c-cpp@v1
    # - name: "Prepare Sonar tools"
    #   run: |
    #     Invoke-WebRequest -Uri "https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip" -OutFile "build-wrapper.zip"
    #     Expand-Archive -Force -Path "build-wrapper.zip" -DestinationPath "externals"
    #     Invoke-WebRequest -Uri "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-windows.zip" -OutFile "sonar-scanner-cli.zip"
    #     Expand-Archive -Force -Path "sonar-scanner-cli.zip" -DestinationPath "externals"
    - name: "setup-msbuild"
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
    - name: "run-cmake(x64)"
      uses: lukka/run-cmake@v10.3
      with:
        cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
        configurePreset: ${{ matrix.triplet }}
    - name: "Run Build Wrapper"
      run: |
        build-wrapper-win-x86-64 --out-dir "bw-output" cmake --build --preset=x64-windows-debug --clean-first
    - name: "Run SonarScanner"
      run: |
        sonar-scanner --define sonar.verbose=true
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
